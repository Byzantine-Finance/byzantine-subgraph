type NodeOperator @entity {
  id: Bytes! # nodeOpAddr as ID
  nodeOpAddr: String! # address
  reputationScore: BigInt! # uint256
  hasActiveBids: Boolean!
  bids: [BidPlaced!] @derivedFrom(field: "nodeOp")
}

type BidPlaced @entity {
  id: Bytes!
  nodeOp: NodeOperator! # reference to NodeOperator
  discountRate: BigDecimal! # Scaled down to 1e2
  duration: BigInt! # uint256
  bidPrice: BigDecimal! # Converted bidPrice in Ether
  uint256AuctionScore: BigInt! # uint256
  timestamp: BigInt!
  txHash: String # hash of the transaction
  bidStatus: BidStatus!
}

type DV @entity {
  id: Bytes! # hash of the transaction
  timestamp: BigInt!
  txHash: String!
  winners: [BidPlaced!]!
}

enum BidStatus {
  Closed # bid withdrawn or already won
  Pending # bid active
  Active # winner in DV
}
